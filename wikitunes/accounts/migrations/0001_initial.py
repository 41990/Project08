# Generated by Django 5.1.4 on 2024-12-28 20:37

import accounts.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(help_text='Unique email address of the user.', max_length=254, unique=True)),
                ('address', models.CharField(help_text="User's address.", max_length=50)),
                ('country', models.CharField(help_text='Country where the user resides.', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_names', models.CharField(help_text='Name of the account holder.', max_length=50)),
                ('password', models.CharField(help_text='Hashed password for the account.', max_length=254)),
                ('account_location', models.CharField(help_text='Physical location associated with the account.', max_length=50)),
                ('profile_picture', models.ImageField(height_field='height', help_text='File containing uploaded profile image.', upload_to=accounts.models.img_dir_path, validators=[accounts.models.validate_file_size], width_field='width')),
                ('height', models.PositiveIntegerField(help_text='height of image in pixel/cm/mm.', null=True)),
                ('width', models.PositiveIntegerField(help_text='width of image in pixel/cm/mm.', null=True)),
                ('bio', models.FileField(help_text='File containing uploaded bio.', upload_to=accounts.models.text_dir_path)),
                ('reg_device_ip', models.GenericIPAddressField(help_text='Registration device IP address.')),
                ('start_date', models.DateTimeField(auto_now=True, help_text='The date and time when the account was created.')),
                ('current_date', models.DateField(auto_now=True, help_text='Last updated date.')),
                ('user', models.OneToOneField(help_text='Associated custom user.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(choices=[('Select role', 'Choose'), ('Educator', 'Role 1'), ('Researcher', 'Role 2'), ('Owner/CEO/Proprietor', 'Role 3'), ('Project Team member', 'Role 4'), ('Learner/student', 'Role 5'), ('Other', 'Role 6')], default='Select role', help_text='Role category.', max_length=30)),
                ('account', models.ForeignKey(help_text='Associated account for the role.', on_delete=django.db.models.deletion.CASCADE, to='accounts.account')),
            ],
        ),
    ]
